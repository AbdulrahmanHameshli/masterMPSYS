% CreateTestPath script: Tool to create a test path for autocalibration by
% simple pointing and clicking. Project Nurobot/Anronaut Autocalibration
% The path is generated by fitting a planar spline into the points those
% function is derived to compute the tangent orientations.
%
% v.1.0, Dec 2014, Kai Arras

%% Prepare Session
clear;
addpath('src','data');
addpath('~/SRL/Research/lib/librobotics');

%%% Parameters
pathfilename = 'AGVTestPath.txt';
NPOINTS = 120;        % Number of steps (= localization poses) along path


%% Read in and Display Map
eval('WarehouseMap');       % DemoMap; reads in the matrix M
figure(99); clf; hold on; zoom on; axis equal; box on;
axis([-15 3 -3 8]); title('global map');
for i = 1:size(M, 1)
  drawmapobject(M(i,1), M(i,2), M(i,3), M(i,4), M(i,5));
end
drawreference([0; 0; 0],'',0.4,'k');
axis tight;
axis(axis+[-1 1 -1 1]);


%% Point and Click
viapoints = [];
disp('Click to drop the robot, press return when done.');
eop = false;
while ~eop
  [x,y,button] = ginput(1);
  if ~isempty(button)
    h = plot(x,y,'k+');
    viapoints = cat(2,viapoints,[x; y]);
  else
    eop = true;
  end
end


%% Spline Fit and Tangent Computation
xypath = viapoints(1:2,:);
df = diff(xypath,1,2);
tvia = cumsum([0,sqrt([1 1]*(df.*df))]);
% Fit planar spline
xysplinefn = csapi(tvia,xypath);
% Supersample spline
t = linspace(min(tvia),max(tvia),NPOINTS);
points = fnval(xysplinefn,t);
% Compute tangent by derivation of the spline function
cdv = fnval(fnder(xysplinefn),t);
% Final path
rpath = [points; atan2(cdv(2,:),cdv(1,:))];
% Plot spline points and orientations
plot(points(1,:),points(2,:),'b.-','MarkerSize',18);
for i = 1:size(points,2)
  drawrobot(rpath(:,i),[.6 .6 .6],1);
end


%% Write to file
fid = fopen(pathfilename,'w');
fprintf(fid,'%% Test path for Autocalibration. Format: x y theta. Creator: CreateTestPath.m\n');
fprintf(fid,'%% Project Nurobot/Anronaut Autocalibration, Dec. 2014, koa\n');
for i = 1:size(rpath,2)
  fprintf(fid,'%7.3f   %7.3f   %7.3f\n',rpath(:,i)');
end
fclose(fid);
fprintf('File ''%s'' successfully written\n',pathfilename);


%% Predefined Test Paths
% viapoints = [
%   0.7 -1.1 -3.1 -5.1 -7.4 -9.4 -11.5 -12.2 -11.5 -8.5 -5.8 -4.2 -2.8 -0.3
%   1.6  0.2 -0.5 -0.9 -1.1 -1.2  -0.9  0.9   2.5   2.5  2.6  2.8  3.4  2.1
% ];
% viapoints = [
%   -1   -2   -3   -4   -5   -6   -7   -8   -9  -10  -11  -12
%   2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  -1
% ];
