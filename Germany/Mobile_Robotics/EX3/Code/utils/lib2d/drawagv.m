%DRAWAGV(x,psi,B,L,D,E,CONTOUR,COLOR);%   Plots a three-wheeled robot vehicle at pose x = [x; y; theta] with%   lateral steering wheel displacement D and lateral steering wheel offset%   E. B is the wheel base of the two front wheels, L the length from the%   front wheel base to the center of the steering wheel. The robot %   reference frame is attached to the center of the wheel base with the %   x-axis looking in forward direction i.e. in direction of the fork.%   With CONTOUR = 0, the wheel axes and connections are drawn. %   COLOR is a [r g b]-vector or a Matlab color string (e.g. 'r')%%   DRAWAGV should be replaced by DRAWROBOT >=v1.3 and removed%   The exact definition of parameters, their sign and notation is given in%   "Odometry Modeling and Autocalibration of the Three-Wheel Kinematic%   Configuration" by koa, Jan 2015.%%   v.1.0, 12.10.03, koa%   v.1.01, koa, Aug 2014, minor adaptations from depreciated drawtwrobot %   v.1.2, Jan 2015, parameter E added for anronaut autocalibration project function h = drawagv(x,psi,B,L,D,E,contour,color)% ConstantsWD = 0.16;    % wheel diameter in [m]WT = 0.04;    % wheel thickness in [m]RR = 0.02;    % wheel roundness radius in [m]FW = 0.1;     % fork width in [m]FL = 0.8;     % fork length in [m]FD = 0.6;     % fork lateral displacement in [m]LW = 1;       % line width of contourBW = 0.6;     % robot body width in [m]BH = B+3*FW;  % robot body height in [m]BW2 = 0.55;   % robot body width until corner in [m]BH2 = 0.2;    % robot body height until corner in [m]y = x(2); theta = x(3); x = x(1);T = [x; y];R = [cos(theta), -sin(theta); sin(theta), cos(theta)];% Calculate fork wheel axis positionsxe1 = x + B/2*cos(theta+pi/2);xe2 = x - B/2*cos(theta+pi/2);ye1 = y + B/2*sin(theta+pi/2);ye2 = y - B/2*sin(theta+pi/2);% Calculate steering wheel to fork wheel axis positionsxfp = x + D*cos(theta+pi/2);yfp = y + D*sin(theta+pi/2);xfw = xfp + L*cos(theta+pi);yfw = yfp + L*sin(theta+pi);xsw = xfw + E*cos(theta+psi+pi/2);ysw = yfw + E*sin(theta+psi+pi/2);% Calculate fork contourx1 = -FD;y1 = B/2 + FW/2;x2 = -FD + FL;y3 = B/2 - FW/2;p = [x1,x2,x2,x1;y1,y1,y3,y3];p = cat(2,p,[x1,x2,x2,x1;-y3,-y3,-y1,-y1]);% Calculate body contour y3 = -BH/2;x4 = -FD - BW2;x5 = -FD - BW;y5 = -BH2/2;p = cat(2,p,[x1,x4,x5;y3,y3,y5]);p = cat(2,p,[x5,x4,x1;-y5,-y3,-y3]);p = cat(2,p,[x1;y1]);   % close contour% Transform and drawif contour  p = R*p + T*ones(1,size(p,2));  h = plot(p(1,:),p(2,:),'Color',color,'LineWidth',LW);  % Draw left and right front wheel  drawrect([xe1, ye1, theta], WD, WT, RR, 1, color);  drawrect([xe2, ye2, theta], WD, WT, RR, 1, color);  % Draw back steering wheel  drawrect([xsw, ysw, theta+psi], WD, WT, RR, 1, color);else  h1 = plot([xe1 xe2],[ye1 ye2],'-','Color',color,'LineWidth',LW);  h2 = plot([xfp xfw],[yfp yfw],'-','Color',color,'LineWidth',LW);  h3 = plot([xfw xsw],[yfw ysw],'-','Color',color,'LineWidth',LW);  h = [h1; h2; h3];  % Draw left and right front wheel  drawrect([xe1, ye1, theta], WD, WT, RR, 1, color);  drawrect([xe2, ye2, theta], WD, WT, RR, 1, color);  % Draw back steering wheel  drawrect([xsw, ysw, theta+psi], WD, WT, RR, 1, color);end