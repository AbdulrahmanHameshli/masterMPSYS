%function h = drawmapobject(x0,y0,x1,y1,idobject)% Draws a couple of simple map objects into current figure. The objects are% axis-parallel rectangles defined by two corners (x0,y0) and (x1,y1) in% global coordinates. Use MakeMap.m to create maps.% Featured objects and styles are:%  0 : filled black%  1 : filled dark gray%  2 : crossed gray%  3 : outlined gray%  4 : filled light gray%  6 : circle%  7 : plant%  8 : beacon% v.1.0, rp, im, 27.3.00, koa% v.1.1, Dec. 2014, Kai Arras: beacons added, renamed from draw_box.mfunction h = drawmapobject(x0,y0,x1,y1,style)LW = 0.2;           % For hi-res graphical output: LW = 0.2, otherwise = 1BEACONSIZE = 0.13;  % Beacon size in [m]switch(style)  case 0, C=[0.0 0.0 0.0]; filled=1; crossed=0; circle=0; plant=0; beacon = 0;  case 1, C=[0.5 0.5 0.5]; filled=1; crossed=0; circle=0; plant=0; beacon = 0;  case 2, C=[0.5 0.5 0.5]; filled=0; crossed=1; circle=0; plant=0; beacon = 0;  case 3, C=[0.5 0.5 0.5]; filled=0; crossed=0; circle=0; plant=0; beacon = 0;  case 4, C=[0.9 0.9 0.9]; filled=1; crossed=0; circle=0; plant=0; beacon = 0;  case 6, C=[0.5 0.5 0.5]; filled=1; crossed=0; circle=1; plant=0; beacon = 0;  case 7, C=[0.3 0.9 0.4]; filled=0; crossed=0; circle=0; plant=1; beacon = 0;  case 8, C=[0.3 0.9 0.4]; filled=0; crossed=0; circle=0; plant=0; beacon = 1;  otherwise, C=[.8 .3 .3]; filled=0; crossed=0; circle=0; plant=0; beacon = 0;endX = [x0; x1; x1; x0; x0];Y = [y0; y0; y1; y1; y0];if circle,  r1 = abs(x0-x1);  r2 = abs(x0-x1)-0.1;  switch(y1)    case 1, t = pi/2:pi/360:pi;      X = [min(x0,x1)-r1*cos(t),min(x0,x1)+r2*sin(t)];      Y = [r1*sin(t)+y0,-r2*cos(t)+y0];    case 2, t = 0:pi/360:pi/2;      X = [r1+min(x0,x1)-r1*cos(t),r1+min(x0,x1)-r2*sin(t)];      Y = [r1*sin(t)+y0,r2*cos(t)+y0];    case 3, t = 3*pi/2:pi/360:2*pi;      X = [r1+min(x0,x1)-r1*cos(t),r1+min(x0,x1)+r2*sin(t)];      Y = [r1*sin(t)+y0,-r2*cos(t)+y0];    case 4, t = pi:pi/360:3*pi/2;      X = [min(x0,x1)-r1*cos(t),min(x0,x1)-r2*sin(t)];      Y = [r1*sin(t)+y0,r2*cos(t)+y0];  end;end;if plant,  t = 0:pi/180:2*pi;  theta = t.*(randn(1,length(t))/1000+1.0);  rho = 2*abs(x0-x1)*sin(2*t).*cos(1.98*t).*sin(18.191*t).*(randn(1,length(t))/400+1.0);  [X,Y] = pol2cart(theta, rho);  h = fill(X+x0, Y+y0, C,'EdgeColor',C-0.3);  rho = abs(y0-y1)*sin(3*t).*cos(3*t);  [X,Y] = pol2cart(theta, rho);  X = X+x0;  Y = Y+y0;end;if beacon,  xvec = [x0-BEACONSIZE, x0, x0+BEACONSIZE, x0];  yvec = [y0, y0-BEACONSIZE, y0, y0+BEACONSIZE];  fill(xvec,yvec,[1 .9 .0],'LineStyle','none');  xvec = [x0-BEACONSIZE, x0+BEACONSIZE, x0, x0];  yvec = [y0, y0, y0-BEACONSIZE, y0+BEACONSIZE];  fill(xvec,yvec,[1 .5 .0],'LineStyle','none');end;if filled,  h = fill(X,Y,C,'EdgeColor',C);else  if crossed    X = [X; x0; x1; x0; x1];    Y = [Y; y0; y1; y1; y0];  end;  if ~plant, h = line(X,Y,'Color',C,'LineWidth',LW); end;end;