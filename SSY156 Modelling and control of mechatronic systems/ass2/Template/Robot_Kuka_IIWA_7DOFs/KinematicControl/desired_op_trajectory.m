function out = desired_op_trajectory(u)
%DESIRED_OP_TRAJECTORY generates a desired trajectory in the operational
%space wrt to the wcf
%   u(1):     current simulation time
%   u(2:8):   initial joint position
%   u(9:11):  desired ef position wrt wcf (3x1)
%   u(12:14): desired ef orientation wrt wcf (euler angles ZYZ) (3x1)

% Current simulation time
t=u(1);

% Initial Joint position
Qini=u(2:8);

% Desired EF position
xd_W=u(9:11);

% Desired EF orientation
phid_W=u(12:14);

% Flag to activate the Spline generator
% (1) on:  the desired pose will be generated by the time-based spline
% (0) off: the desired pose will be constant (no spline)
splineFlag=u(15);

%% Desired Pose
% Kinematic Parameters L1,L2,L3, and L4
L=kukaIIWA7_params;

%TODO: Define the HT of the robot base (link 0) w.r.t. wcf (w)
H0_W=...

% Get the initial ef pose 
%TODO: reuse from assignment 1. 
[~, HT_W] = getAbsoluteHT_kukaIIWA7(Qini,L, H0_W);
%TODO: get the HT link 7 wrt link 0
H7ini_W=...
%TODO: get the EF position wrt link 0 (initial position)
x7ini_W=...

%TODO: get the initial EF orientation wrt W
R7_W=...
%Transform the initial rotation to euler angles ZYZ
%TODO: complete the function R2_euler_zyz.m and define the correct input argument
phi7_W=R2_euler_zyz(...);

% For a constant desired pose
Pd_W=xd_W;
phid=phid_W;

% If spline is activated, we will generate a time-based desired pose
if splineFlag
    % Compute the desired EF trajectory (position)
    %TODO: complete function Pol5th3DOF.m
    Pd_W = Pol5th3DOF(x7ini_W,xd_W, 0,5,t);

    % Compute the desired EF trajectory (orientation)
    phid = Pol5th3DOF(phi7_W,phid_W, 0,5,t);
end


%Convert the desired orientation from euler angles ZYZ to Rotation
%matrix
%TODO: complete the function euler_ZYZ_2R.m and define the correct input argument
Rd_W=euler_ZYZ_2R(...);

%TODO: Form the the desired EF HT wrt wcf (4x4) using the vector Pd_W
%and Rotation Rd_W
Hd_W=[... ...; 0 0 0 1];

% Serilaization of HT, form matrix (4X4) into a vector (16x1). This is
% needed since simulink only works with vectors.
out=[reshape(Hd_W,16,1);Pd_W;phid];

end

